class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class NIA_239_skeleton: Default
	{
		skeletonInherit = "";
		skeletonBones[] =
		{
			"226_recoil","",
			"zasleh","",
			"Sigframe", "226_recoil",
			"Slide","Sigframe",
			"Sightpair_Factory","Slide",
			"Sightproxy","Slide",
			"Firingpin","Slide",
			"magazinedummy", "Sigframe",
			"Magazine", "magazinedummy",
			"magazine2", "magazinedummy",
			"countround1","magazine2",
			"countround2","countround1",
			"dummyround","Magazine",
			"casing","slide",
			"animbullet1", "casing",
			"Magazine_release", "Sigframe",
			"Trigger", "Sigframe",
			"Slidestop","Sigframe",
			"Hammer","Sigframe",
			"Decocker","Sigframe",
			"accprox","Sigframe",
			"Barrel","Sigframe",
			"Barrel_locked","Sigframe",
			"slide_locked", "Sigframe",
			"Sightproxy_locked","Slide_locked",
			"Sightpair_Locked","Slide_locked",
			"Protector_locked", "Barrel_locked",
			"Protector", "Barrel"
			//"M9_Ammo","Sigframe"
		};
	};
};
class CfgModels
{
	class Default
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};
	
	class NIA_239: Default
	{
		skeletonName = "NIA_239_skeleton";
		sections[]=
		{
		"zasleh"
		};
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;		// Maximum half-cooling time (in seconds)
		afMax = 200;		// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;		// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;		// Metabolism temperature of the model (in celsius)			
		class Animations
		{
	//Hiding Sights when optic accessories attached. 
            class toprail_hide
            {
                type="hide";
                source="hasOptics";
                selection="Sightpair_Factory";
                minValue = 0;
                maxvalue = 1;
                hideValue = 0.1;
            };
            class toprail2_hide
            {
                type="hide";
                source="hasOptics";
                selection="Sightpair_locked";
                minValue = 0;
                maxvalue = 1;
                hideValue = 0.1;
            };
            class protector_hide
            {
                type="hide";
                source="hasSuppressor";
                selection="protector";
                minValue = 0;
                maxvalue = 1;
                hideValue = 0.1;
            };
            class protector2_hide
            {
                type="hide";
                source="hasSuppressor";
                selection="protector_locked";
                minValue = 0;
                maxvalue = 1;
                hideValue = 0.1;
            };
		// Hiding magazine when none is loaded
			class magazine_hasMag_hide
			{
				type			= hide;
				source			= hasMagazine.0;
				selection		= "Magazinedummy";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.5;
			};

		// Trigger when firing
			class trigger_reload_rot
			{
				type			= rotation;
				source			= trigger.0;
				selection		= "Trigger";
				axis			= "trigger_axis";
				minValue		= 0.5;
				maxValue		= 1;
				angle0			= 0;
				angle1			= -(rad 20);
			};
				// trigger box when firing
		// Slide when firing
			class slide_reload_move
			{
				type			= translation;
				source			= reload.0;
				selection		= "Slide";
				axis			= "slide_axis";
				minValue		= 0;
				maxValue		= 0.8;
				offset0			= 0;
				offset1			= 0.23;
			};
			class slide_reload_move2
			{
				type			= translation;
				source			= reload.0;
				selection		= "Slide";
				axis			= "slide_axis";
				minValue		= 0.81;
				maxValue		= 0.9;
				offset0			= 0;
				offset1			= -0.23;
			};
			class dummy_reload
			{
				type			= hide;
				source			= reload.0;
				selection		= "dummyround";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.01;
			}; 
				class casing_reload
			{
				type			= hide;
				source			= reload.0;
				selection		= "casing";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.8;
				unhidevalue	= 0.83;
			}; 
				class bullet_reload1
			{
				type			= hide;
				source			= reload.0;
				selection		= "animbullet1";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.81;
			}; 
			
			class casing_reload_move
			{
				type			= translation;
				source			= reload.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		= 0.8;
				maxValue		= 0.81;
				offset0			= -1;
				offset1			= 0;
			};
			class casing_reload_move2
			{
				type			= translation;
				source			= reload.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		= 0;
				maxValue		= 0.8;
				offset0			= 1;
				offset1			= 0;
			};

				class casinghide
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "casing";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.1;
			}; 
			class countroundhide
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "countround1";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.1;
			}; 
		// Barrel when firing Translation
			class barrel_reload_move
			{
				type			= translation;
				source			= reload.0;
				selection		= "Barrel";
				axis			= "barrel_tr_axis";
				minValue		= 0;
				maxValue		= 0.1;
				offset0			= 0;
				offset1			= -0.1;
			};
			
		// Barrel when firing Rotation
			class barrel_reload_rot
			{
				type			= rotation;
				source			= reload.0;
				selection		= "Barrel";
				axis			= "barrel_rt_axis";
				minValue		= 0;
				maxValue		= 0.2;
				angle0			= 0;
				angle1			= -(rad 1.5);
			};		
			// Hammer when firing Rotation
			class Hammer_reload_rot
			{
				type			= rotation;
				source			= reload.0;
				selection		= "Hammer";
				axis			= "Hammer_axis";
				minValue		= 0;
				maxValue		= 0.2;
				angle0			= (rad 25);
				angle1			= (rad 15);
			};
			class Hammer_reload_rot2
			{
				type			= rotation;
				source			= reload.0;
				selection		= "Hammer";
				axis			= "Hammer_axis";
				minValue		= 0.8;
				maxValue		= 0.95;
				angle0			= (rad 0);
				angle1			= (rad -45);
			};
			class Hammer_reload_rot3
			{
				type			= rotation;
				source			= reload.0;
				selection		= "Hammer";
				axis			= "Hammer_axis";
				minValue		= 0.951;
				maxValue		= 1;
				angle0			= (rad 0);
				angle1			= (rad 45);
			};
		// Slide when empty
			class slide_empty_move: slide_reload_move
			{
				selection		= "slide_locked";
				source			= isEmpty.0;
			};
		// Switching between locked and and unlocked slides. Neccesary for reloadmagazine because BI's animation sources still suck
			class slide_switch1
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "slide_locked";
				minValue		= -0.01;
				maxValue		= 1;
				hideValue		= 0;
				unhideValue		= 0.1;
			}; 
			class slide_switch2
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "slide";
				minValue		= -0.01;
				maxValue		= 1;
				hideValue		= 0.1;
			}; 
          /*  class toprail33_hide
            {
                type="hide";
	source			= isEmpty.0;
                selection="Sightpair_locked";
				minValue		= -0.01;
				maxValue		= 1;
				hideValue		= 0;
				unhideValue		= 0.1;
            };*/
// Switching between locked and and unlocked slides. Neccesary for reloadmagazine because BI's animation sources still suck
			class barrel_switch1
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "barrel_locked";
				minValue		= -0.01;
				maxValue		= 1;
				hideValue		= 0;
				unhideValue		= 0.1;
			}; 
			class barrel_switch2
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "barrel";
				minValue		= -0.01;
				maxValue		= 1;
				hideValue		= 0.1;
			}; 
		// Catch when empty				
			class catch_empty_move_2
			{
				type			= rotation;
				source			= isEmpty.0;
				selection		= "Slidestop";
				axis			= "release_axis";
				minValue		= 0.90;
				maxValue		= 1;
				angle0			= 0;
				angle1			= -(rad 3);
			};	
		// Barrel when empty
			class barrel_empty_move: barrel_reload_move
			{
				selection		= "barrel_locked";
				source			= isEmpty.0;
			};		
		// Barrel when empty
			class barrel_empty_rot: barrel_reload_rot
			{
				selection		= "barrel_locked";
				source			= isEmpty.0;
			};			
			// Hammer when empty
			class Hammer_empty: Hammer_reload_rot
			{
				source			= isEmpty.0;
			};	
		// Hiding ammo when empty
		/*	class ammo_empty_hide
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "M9_Ammo";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.1;
			}; */
		// Randomized rotation of muzzle flash
			class zaslehROT
			{
				type			= rotationX;
				source			= ammoRandom;	// use ammo count as phase for animation
				sourceAddress	= loop;			// loop when phase out of bounds
				selection		= "zasleh";		// selection we want to rotate
				axis			= "zasleh_axis";			// no own axis - center of rotation is computed from selection
				centerFirstVertex = true;		// use first vertex of selection as center of rotation
				minValue		= 0;
				maxValue		= 4;			// rotation angle will be 360/4 = 90 degrees
				angle0			= (rad 0);
				angle1			= (rad 360);
			};

		// Recoil simulating animations
			class recoil_reload_rot_1
			{
				type			= rotation;
				source			= reload.0;
				selection		= "sigframe";
				axis			= "recoil_axis";
				memory			= 1;
				minValue		= 0.97;
				maxValue		= 1;
				angle0			= 0;
				angle1			= -(rad 5);
			};
			class recoil_reload_rot_2: recoil_reload_rot_1
			{
				minValue		= 0.82;
				maxValue		= 0.97;
				angle1			= -(rad 2.5);
			};
			class recoil_reload_rot_3: recoil_reload_rot_1
			{
				minValue		= 0.50;
				maxValue		= 0.82;
				angle1			= (rad 5);
			};
			class recoil_reload_rot_4: recoil_reload_rot_1
			{
				minValue		= 0.25;
				maxValue		= 0.50;
				angle1			= (rad 1.5);
			};
			class recoil_reload_rot_5: recoil_reload_rot_1
			{
				minValue		= 0;
				maxValue		= 0.25;
				angle1			= (rad 1);
			};
			

		// Magazine when reloading

			class magazine_reloadMag_hide
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "Magazine";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0;
			unhideValue		= 0.2666667;
		};
						class reload_rot_1
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine";
				axis			= "reload_magpivot0";
				memory			= 1;
				minValue		= 0.14;
				maxValue		= 0.257;
				angle0			= 0;
				angle1			= rad 40;
			};


						class reload_rot_2
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazinedummy";
				axis			= "reload_magpivot0";
				minValue		= 0.3619;
				maxValue		= 0.44762;
				angle0			= 0;
				angle1			= rad -40;
			};
						class reload_rot_2b
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot1";
				minValue		= 0.3619;
				maxValue		= 0.44762;
				angle0			= 0;
				angle1			= rad -20;
			};
						class reload_rot_2c
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot2";
				minValue		= 0.44762;
				maxValue		= 0.47619;
				angle0			= 0;
				angle1			= rad 20;
			};
						class reload_rot_3a
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot2";
				minValue		= 0.44762;
				maxValue		= 0.51428;
				angle0			= 0;
				angle1			= rad 20;
			};
			class reload_move3a
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			="reload_magpivot0";
				minValue		= 0.44762;
				maxValue		= 0.51428;
				offset0			= 0;
				offset1			= -1.0;
			};
						class reload_rot_4a
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot3";
				minValue		= 0.54285;
				maxValue		= 0.6;
				angle0			= 0;
				angle1			= rad -40;
			};
			class reload_move4a
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot3";
				minValue		= 0.54285;
				maxValue		= 0.6;
				offset0			= 0;
				offset1			= 1.0;
			};
						class reload_rot_4b
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot4";
				minValue		= 0.54285;
				maxValue		= 0.6;
				angle0			= 0;
				angle1			= rad 50;
			};
			class reload_move_4b
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "magazine_axis";
				minValue		= 0.54285;
				maxValue		= 0.6;
				offset0			= 0;
				offset1			= 0.3;
			};
			class reload_rot_5
			{
				type			= rotation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot5";
				minValue		= 0.6;
				maxValue		= 0.6381;
				memory			= 1;
				angle0			= 0;
				angle1			= rad -40;
			};
			class reload_move_5
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "reload_magpivot2";
				minValue		= 0.6;
				maxValue		= 0.6381;
				offset0			= 0;
				offset1			= 0.3;
			};
			class reload_move_5a
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "magazine_axis";
				minValue		= 0.6;
				maxValue		= 0.6381;
				offset0			= 0;
				offset1			= 0.3;
			};
			class reload_move_6
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazine2";
				axis			= "slide_axis";
				minValue		= 0.6476;
				maxValue		= 0.6762;
				offset0			= 0;
				offset1			= 0.25;
			};
			class slide_reloadmag_move
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "Slide";
				axis			= "slide_axis";
				minValue		 =0.6476;
				maxValue		= 0.66667;
				offset0			= 0;
				offset1			= 0.25;
			};
			class slide_reloadmagmove_move2
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "Slide";
				axis			= "slide_axis";
				minValue		= 0.6762;
				maxValue		= 0.6952;
				offset0			= 0;
				offset1			= -0.25;
			};
			class casing_reloadmag
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "casing";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.66667;
				unhidevalue	= 0.6762;
			}; 
							class dummy_reloadmag
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "dummyround";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.0;
				unhidevalue	= 0.26667;
			}; 
			
			class casing_reloadmag_move
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		 =0.66667;
				maxValue		= 0.6762;
				offset0			= 0;
				offset1			= -1;
			};
			class casing_reloadmag_move2
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		= 0.6762;
				maxValue		= 0.6952;

				offset0			= 0;
				offset1			= 1;
			};
			class slidelocked_reloadmagmove_move2
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "Slide_locked";
				axis			= "slide_axis";
				minValue		= 0.6762;
				maxValue		= 0.6952;
				offset0			= 0;
				offset1			= -0.25;
			};
		// Barrel when empty
			class barrel_reloadmag_move1: barrel_reload_move
			{
				selection		= "barrel";
				minValue		 =0.6476;
				maxValue		= 0.66667;
				source			= reloadMagazine.0;
			};		
			class barrel_reloadmag_rot1: barrel_reload_rot
			{
				selection		= "barrel";
				minValue		 =0.6476;
				maxValue		= 0.66667;
				source			= reloadMagazine.0;
			};

			class barrel_reloadmag_move2: barrel_reload_move
			{
				selection		= "barrel";
				minValue		= 0.6762;
				maxValue		= 0.6952;
				source			= reloadMagazine.0;
				offset0			= 0;
				offset1			= 0.1;
			};		
			class barrel_reloadmag_rot2: barrel_reload_rot
			{
				selection		= "barrel";
				minValue		= 0.6762;
				maxValue		= 0.6952;
				source			= reloadMagazine.0;
				angle1			= (rad 1.5);
			};
			class barrellocked_reloadmag_move2: barrel_reload_move
			{
				selection		= "barrel_locked";
				minValue		= 0.6762;
				maxValue		= 0.6952;
				source			= reloadMagazine.0;
				offset0			= 0;
				offset1			= 0.1;
			};		
			class barrellocked_reloadmag_rot2: barrel_reload_rot
			{
				selection		= "barrel_locked";
				minValue		= 0.6762;
				maxValue		= 0.6952;
				source			= reloadMagazine.0;
				angle1			= (rad 1.5);
			};
		// Going down
			class magazine_reloadMag_move_1
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "magazinedummy";
				axis			= "magazine_axis";
				minValue		= 0.266667;
				maxValue		= 0.34285;
				offset0			= 0;
				offset1			= -1.0;
			};
		// Going up
			class magazine_reloadMag_move_2: magazine_reloadMag_move_1
			{
				minValue		= 0.44762;
				maxValue		= 0.47625;
				offset0			= 0;
				offset1			= 0.2;
			};
			class magazine_reloadMag_move_2a: magazine_reloadMag_move_1
			{
				minValue		= 0.47625;
				maxValue		= 0.51428;
				offset0			= 0;
				offset1			= 0.8;
			};
			class magazine2_reload_hide
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "Magazine2";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.685;
			};
		};
	};
class 239 : NIA_239{};

};